---
- name: Setup torrent client
  hosts: all

  vars_files:
    - vars.yml
    - vars-private.yml

  pre_tasks:
    - name: Update cache if needed (Debian)
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Update packages
      ansible.builtin.package:
        name: "*"
        state: latest

    - name: Ensure unzip is installed
      ansible.builtin.package:
        name: unzip
        state: present

  tasks:
    - name: Ensure share group exists
      ansible.builtin.group:
        name: "{{ share_group }}"
        gid: 3500
        state: present

    - name: Ensure share user group exists
      ansible.builtin.group:
        name: "{{ torrentuser_name }}"
        gid: 3501
        state: present

    - name: Ensure share user exists
      ansible.builtin.user:
        name: "{{ torrentuser_name }}"
        group: "{{ torrentuser_name }}"
        groups: "{{ share_group }}"
        uid: 1000
        password: "{{ torrentuser_password | password_hash(hashtype='sha512', salt=torrentuser_salt) }}"
        state: present

    - name: Add root to nordvpn group
      ansible.builtin.user:
        name: root
        groups: nordvpn

    - name: Ensure share folder exists
      ansible.builtin.file:
        path: /share
        state: directory
        mode: "0775"

    - name: Ensure qBitttorrent is installed
      ansible.builtin.package:
        name: qbittorrent-nox
        state: present

    - name: Ensure qbittorrent config folder is present
      ansible.builtin.file:
        path: "/home/{{ torrentuser_name }}/.config"
        state: directory
        owner: "{{ torrentuser_name }}"
        group: "{{ torrentuser_name }}"

    - name: Ensure qbittorrent config folder is present
      ansible.builtin.file:
        path: "/home/{{ torrentuser_name }}/.config/qBittorrent"
        state: directory
        owner: "{{ torrentuser_name }}"
        group: "{{ torrentuser_name }}"

    - name: Ensure qbittorrent config file is on remote
      ansible.builtin.copy:
        src: ./qbittorrent.conf
        dest: "/home/{{ torrentuser_name }}/.config/qBittorrent/qBittorrent.conf"
        mode: "0664"
        owner: "{{ torrentuser_name }}"
        group: "{{ torrentuser_name }}"

    - name: Ensure torrent download path is set
      ansible.builtin.command: "runuser -l {{ torrentuser_name }} -c 'qbittorrent-nox --save-path=/share/video-share'"
      changed_when: false

    - name: Ensure qbittorrent service file is on remote (systemd)
      ansible.builtin.copy:
        src: ./qbittorrent.service
        dest: /etc/systemd/system/qbittorrent.service
        mode: "0664"
      when: not ansible_distribution == "CentOS"

    - name: Ensure qbittorrent service file is on remote (sysvinit)
      ansible.builtin.copy:
        src: ./qbittorrent
        dest: /etc/init.d/qbittorrent
        mode: "0755"
      when: ansible_distribution == "CentOS"

    - name: Download and extract qbit matUI
      ansible.builtin.unarchive:
        src: "https://github.com/bill-ahmed/qbit-matUI/releases/download/v{{ qbit_matUI_version }}/qbit-matUI_Unix_{{ qbit_matUI_version }}.zip"
        dest: "/home/{{ torrentuser_name }}"
        remote_src: true
        owner: "{{ torrentuser_name }}"
        group: "{{ torrentuser_name }}"

    - name: Ensure qbittorrent service is enabled and started
      ansible.builtin.service:
        name: qbittorrent
        state: started
        enabled: true

